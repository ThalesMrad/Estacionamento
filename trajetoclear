int verificaTrajeto(Auto veiculo, int **mapa, Movimento manobra){
  if(manobra.amplitude == 0)
    return 1;
  int inicio, final;
  if( veiculo.direcao == manobra.direcao){          //Se as direções forem iguais, verifica se o
      if( veiculo.direcao == 'X'){                  //caminho que o carro terá de percorrer na linha está livre
        if(manobra.sinal == '-'){                   //se não estiver livre, retorna 3 para colisão com outro veículo
          inicio = veiculo.x-2;
          final = veiculo.x-1 + manobra.amplitude;
        }
        else {
          inicio = veiculo.x-1 + veiculo.tamanho;
          final = veiculo.x-1 + manobra.amplitude + veiculo.tamanho-1;
      }
        }
      else if( veiculo.direcao == 'Y'){
        if(manobra.sinal == '-'){
          inicio = veiculo.y-2;
          final = veiculo.y-1 + manobra.amplitude;
        }
        else {
          inicio = veiculo.y-1 + veiculo.tamanho;
          final = veiculo.y-1 + manobra.amplitude + veiculo.tamanho-1;
        }
      }
      verificaInicioeFinal(&inicio,&final);
      //printf("\n final: %d inicio: %d\n",final,inicio);
      if(!verificaColisaoParede(final) || !verificaColisaoParede(inicio))  // Se a manobra tentar avançar além da parede, retorna 2
        return 2;

      if(!verificaLinhaLivre(veiculo, veiculo.direcao, inicio, final, mapa)) // Se houver algo no trajeto linear, retorna 3
        return 3;
  }
  else {
    if(veiculo.direcao == 'X'){   //Se a direção do veiculo for X, a da manobra será Y
      if(manobra.sinal == '-')
        inicio = veiculo.y-2;
      else
        inicio = veiculo.y;
      final = veiculo.y-1 + manobra.amplitude;

      verificaInicioeFinal(&inicio, &final);

      if(!verificaColisaoParede(final) || !verificaColisaoParede(inicio))
        return 2;

      int frente = veiculo.x-1 + veiculo.tamanho-1,
          traseira = veiculo.x-1;
          //printf("\n traseira:%d frente:%d inicio:%d final:%d\n",traseira,frente,inicio,final);
      if(!verificaMatrizLivre(veiculo, inicio, final, traseira, frente, mapa))
        return 3;

    }
    else if (veiculo.direcao == 'Y'){
      if (manobra.sinal == '-')
        inicio = veiculo.x-2;
      else
        inicio = veiculo.x;
      final = veiculo.x-1 + manobra.amplitude;

      if(!verificaColisaoParede(final) || !verificaColisaoParede(inicio))
        return 2;

      verificaInicioeFinal(&inicio, &final);

      int frente = veiculo.y-1+veiculo.tamanho-1,
          traseira = veiculo.y-1;
      if(!verificaMatrizLivre(veiculo, inicio, final, traseira, frente, mapa))
        return 3;
    }
  }
  return 1;
}
